import {
  require_Animations,
  require_Autoplay,
  require_ConsoleLogger,
  require_Controller,
  require_HeroSlider,
  require_IntervalTimer,
  require_Layout,
  require_Manager,
  require_composeCssClasses
} from "./chunk-P7N5MZGP.js";
import {
  require_jsx_runtime
} from "./chunk-V2S5DJPG.js";
import {
  __commonJS,
  require_react
} from "./chunk-UZX524IT.js";

// node_modules/hero-slider/dist/components/AutoplayButton/index.module.css.js
var require_index_module_css = __commonJS({
  "node_modules/hero-slider/dist/components/AutoplayButton/index.module.css.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var AutoplayButtonModuleCss = { "Button": "index-module_Button__Lw9Oe" };
    exports["default"] = AutoplayButtonModuleCss;
  }
});

// node_modules/hero-slider/dist/components/AutoplayButton/index.js
var require_AutoplayButton = __commonJS({
  "node_modules/hero-slider/dist/components/AutoplayButton/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var jsxRuntime = require_jsx_runtime();
    var React = require_react();
    var Autoplay = require_Autoplay();
    var IntervalTimer = require_IntervalTimer();
    var composeCssClasses = require_composeCssClasses();
    var index_module = require_index_module_css();
    function _interopDefaultLegacy(e) {
      return e && typeof e === "object" && "default" in e ? e : { "default": e };
    }
    var React__default = _interopDefaultLegacy(React);
    var ButtonType;
    (function(ButtonType2) {
      ButtonType2["PLAY"] = "play";
      ButtonType2["PAUSE"] = "pause";
    })(ButtonType || (ButtonType = {}));
    var AutoplaySvg = class _AutoplaySvg {
      static getPath(buttonType) {
        if (buttonType === ButtonType.PAUSE)
          return _AutoplaySvg.pausePath;
        else
          return _AutoplaySvg.playPath;
      }
    };
    AutoplaySvg.playPath = "M 12,26 18.5,22 18.5,14 12,10 z M 18.5,22 25,18 25,18 18.5,14 z";
    AutoplaySvg.pausePath = "M 12,26 16,26 16,10 12,10 z M 21,26 25,26 25,10 21,10 z";
    function AutoplayButton(props) {
      const { className, style, position = {
        bottom: "0",
        left: "0"
      } } = props;
      const { state: { isPausedByUser }, autoplayState, resume, pause } = Autoplay.useAutoplay();
      const [buttonType, setButtonType] = React__default["default"].useState(autoplayState !== IntervalTimer.IntervalState.IDLE ? ButtonType.PAUSE : ButtonType.PLAY);
      const onClickHandler = (event) => {
        event.stopPropagation();
        if (isPausedByUser)
          resume();
        else
          pause();
      };
      React__default["default"].useEffect(() => {
        if (isPausedByUser && autoplayState === IntervalTimer.IntervalState.IDLE)
          setButtonType(ButtonType.PLAY);
        else if (isPausedByUser && autoplayState === IntervalTimer.IntervalState.PAUSED)
          setButtonType(ButtonType.PLAY);
        else
          setButtonType(ButtonType.PAUSE);
      }, [isPausedByUser, autoplayState]);
      return jsxRuntime.jsx("button", Object.assign({ "data-testid": "hero-slider-autoplay-button", className: composeCssClasses.composeCssClasses("hero-slider-autoplay-button", index_module["default"].Button, className), onClick: onClickHandler, style: Object.assign(Object.assign({}, position), style) }, { children: jsxRuntime.jsx("svg", Object.assign({ fill: "currentColor", height: "100%", width: "100%", viewBox: "0 0 36 36" }, { children: jsxRuntime.jsx("path", { d: AutoplaySvg.getPath(buttonType) }) })) }));
    }
    AutoplayButton.displayName = "hero-slider/autoplay-button";
    exports.AutoplayButton = AutoplayButton;
  }
});

// node_modules/hero-slider/dist/components/Nav/index.module.css.js
var require_index_module_css2 = __commonJS({
  "node_modules/hero-slider/dist/components/Nav/index.module.css.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var NavModuleCss = { "Wrapper": "index-module_Wrapper__xqqKi", "fade-in": "index-module_fade-in__Y7AOI", "Button": "index-module_Button__Xnq8E", "Active": "index-module_Active__l5OO4" };
    exports["default"] = NavModuleCss;
  }
});

// node_modules/hero-slider/dist/components/Nav/index.js
var require_Nav = __commonJS({
  "node_modules/hero-slider/dist/components/Nav/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var jsxRuntime = require_jsx_runtime();
    var Controller = require_Controller();
    var Manager = require_Manager();
    var composeCssClasses = require_composeCssClasses();
    var index_module = require_index_module_css2();
    function Nav({ color, activeColor, position = {
      bottom: "1.5rem",
      left: "50%",
      transform: "translateX(-50%)"
    } }) {
      const { state: { slides, totalSlides } } = Manager.useManager();
      const { state: { activeSlide }, changeSlide } = Controller.useController();
      function renderButtons() {
        if (!totalSlides)
          return [];
        const onClickHandler = (slideNumber) => {
          if (slideNumber !== activeSlide)
            changeSlide(slideNumber);
        };
        return Array.from(slides.values()).map(({ number }) => {
          return (
            // TODO: Deal with the disabled linting later:
            // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-noninteractive-element-interactions
            jsxRuntime.jsx("li", { className: composeCssClasses.composeCssClasses("hero-slider-nav-button", index_module["default"].Button, { className: index_module["default"].Active, useIf: activeSlide === number }), onClick: () => onClickHandler(number) }, number)
          );
        });
      }
      const CSSVariables = {
        "--nav-color": color,
        "--nav-active-color": activeColor
      };
      return jsxRuntime.jsx("ul", Object.assign({ className: composeCssClasses.composeCssClasses("hero-slider-nav-wrapper", index_module["default"].Wrapper), style: Object.assign(Object.assign({}, position), CSSVariables) }, { children: renderButtons() }));
    }
    Nav.displayName = "hero-slider/nav";
    exports.Nav = Nav;
  }
});

// node_modules/hero-slider/dist/components/ButtonsNav/index.module.css.js
var require_index_module_css3 = __commonJS({
  "node_modules/hero-slider/dist/components/ButtonsNav/index.module.css.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var ButtonsNavModuleCss = { "Wrapper": "index-module_Wrapper__wU5EB", "fade-in": "index-module_fade-in__YcH32", "Container": "index-module_Container__YnfKU", "Button": "index-module_Button__vb0cm", "ExtraButton": "index-module_ExtraButton__wTZEw", "Active": "index-module_Active__5slZ5", "Description": "index-module_Description__ZaqVb", "Text": "index-module_Text__rKn0C" };
    exports["default"] = ButtonsNavModuleCss;
  }
});

// node_modules/hero-slider/dist/components/ButtonsNav/index.js
var require_ButtonsNav = __commonJS({
  "node_modules/hero-slider/dist/components/ButtonsNav/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var jsxRuntime = require_jsx_runtime();
    var Controller = require_Controller();
    var Layout = require_Layout();
    var Manager = require_Manager();
    var composeCssClasses = require_composeCssClasses();
    var index = require_Nav();
    var index_module = require_index_module_css3();
    function ButtonsNav(props) {
      const { color, activeColor, backgroundColor, position = {
        bottom: "0",
        left: "50%",
        transform: "translateX(-50%)"
      }, justifyContent, alignItems, mobileThreshold: componentMobileThreshold, isNullAfterThreshold = false, extraButton, isExtraButtonRight } = props;
      const { state: { width }, mobileThreshold } = Layout.useLayout();
      const { state: { slides, totalSlides } } = Manager.useManager();
      const { state: { activeSlide }, changeSlide } = Controller.useController();
      const CSSVariables = {
        "--nav-color": color,
        "--nav-background-color": backgroundColor,
        "--nav-active-color": activeColor
      };
      if (Number(width) <= (componentMobileThreshold !== null && componentMobileThreshold !== void 0 ? componentMobileThreshold : mobileThreshold)) {
        if (isNullAfterThreshold)
          return null;
        return jsxRuntime.jsx(index.Nav, Object.assign({}, props));
      }
      function renderButtons() {
        if (!totalSlides)
          return [];
        const onClickHandler = (slideNumber) => {
          if (slideNumber !== activeSlide)
            changeSlide(slideNumber);
        };
        return Array.from(slides.values()).map(({ number, label }) => {
          const description = label;
          return (
            // TODO: Deal with the disabled linting later:
            // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-noninteractive-element-interactions
            jsxRuntime.jsx("li", Object.assign({ className: composeCssClasses.composeCssClasses("hero-slider-buttons-nav-button", index_module["default"].Button, {
              className: index_module["default"].Active,
              useIf: activeSlide === number
            }), onClick: () => onClickHandler(number) }, { children: jsxRuntime.jsx("div", Object.assign({ className: composeCssClasses.composeCssClasses("hero-slider-buttons-nav-button-description", index_module["default"].Description) }, { children: jsxRuntime.jsx("div", Object.assign({ className: composeCssClasses.composeCssClasses("hero-slider-buttons-nav-button-text", index_module["default"].Text) }, { children: description })) })) }), number)
          );
        });
      }
      return jsxRuntime.jsx("div", Object.assign({ className: composeCssClasses.composeCssClasses("hero-slider-buttons-nav-wrapper", index_module["default"].Wrapper), style: Object.assign(Object.assign({}, position), CSSVariables) }, { children: jsxRuntime.jsxs("ul", Object.assign({ className: composeCssClasses.composeCssClasses("hero-slider-buttons-nav-container", index_module["default"].Container), style: {
        justifyContent: justifyContent || "center",
        /**
         * The **vertical alignment** of the buttons can be set manually.
         * If it's undefined and if there is a position top passed as prop,
         * then `alignItems` will be `flex-start`. Otherwise,
         * it is set as `flex-end`.
         */
        alignItems: alignItems || (position.top !== void 0 ? "flex-start" : "flex-end")
      } }, { children: [renderButtons(), extraButton && jsxRuntime.jsx("div", Object.assign({ className: composeCssClasses.composeCssClasses("hero-slider-buttons-nav-extra-button", index_module["default"].ExtraButton), style: {
        order: isExtraButtonRight ? 1 : 0
      } }, { children: extraButton }))] })) }));
    }
    ButtonsNav.displayName = "hero-slider/buttons-nav";
    exports.ButtonsNav = ButtonsNav;
  }
});

// node_modules/hero-slider/dist/components/MenuNav/index.module.css.js
var require_index_module_css4 = __commonJS({
  "node_modules/hero-slider/dist/components/MenuNav/index.module.css.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var MenuNavModuleCss = { "Wrapper": "index-module_Wrapper__-jUiF", "fade-in": "index-module_fade-in__HoAls", "Container": "index-module_Container__3Qf2J", "Extra": "index-module_Extra__1b50U", "Bar": "index-module_Bar__TdlPr", "Button": "index-module_Button__F3ERg", "ExtraButton": "index-module_ExtraButton__j1mUn", "Description": "index-module_Description__gzcNp", "Number": "index-module_Number__jaqYr", "Square": "index-module_Square__wq3HS", "Text": "index-module_Text__d-WKC" };
    exports["default"] = MenuNavModuleCss;
  }
});

// node_modules/hero-slider/dist/components/MenuNav/index.js
var require_MenuNav = __commonJS({
  "node_modules/hero-slider/dist/components/MenuNav/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var jsxRuntime = require_jsx_runtime();
    var Controller = require_Controller();
    var Layout = require_Layout();
    var Manager = require_Manager();
    var composeCssClasses = require_composeCssClasses();
    var index = require_Nav();
    var index_module = require_index_module_css4();
    function MenuNav(props) {
      const { color, activeColor, position = {
        bottom: "0",
        left: "50%",
        transform: "translateX(-50%)"
      }, justifyContent = "center", mobileThreshold: componentMobileThreshold, isNullAfterThreshold, extraButton, isExtraButtonRight = true } = props;
      const { state: { width }, mobileThreshold } = Layout.useLayout();
      const { state: { slides, totalSlides } } = Manager.useManager();
      const { state: { activeSlide }, changeSlide } = Controller.useController();
      if (Number(width) <= (componentMobileThreshold !== null && componentMobileThreshold !== void 0 ? componentMobileThreshold : mobileThreshold)) {
        if (isNullAfterThreshold)
          return null;
        return jsxRuntime.jsx(index.Nav, Object.assign({}, props));
      }
      function renderButtons() {
        if (!totalSlides)
          return [];
        const onClickHandler = (slideNumber) => {
          if (slideNumber !== activeSlide)
            changeSlide(slideNumber);
        };
        return Array.from(slides.values()).map(({ label, number }, index2) => {
          const description = label;
          return (
            // TODO: Deal with the disabled linting later:
            // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-noninteractive-element-interactions
            jsxRuntime.jsx("li", Object.assign({ className: composeCssClasses.composeCssClasses("hero-slider-menu-nav-button", index_module["default"].Button, {
              className: index_module["default"].Active,
              useIf: activeSlide === number
            }), onClick: () => onClickHandler(number) }, { children: jsxRuntime.jsxs("div", Object.assign({ className: composeCssClasses.composeCssClasses("hero-slider-menu-nav-button-description", index_module["default"].Description) }, { children: [jsxRuntime.jsxs("div", Object.assign({ className: composeCssClasses.composeCssClasses("hero-slider-menu-nav-button-number", index_module["default"].Number) }, { children: [number, jsxRuntime.jsx("span", { className: composeCssClasses.composeCssClasses("hero-slider-menu-nav-button-square", index_module["default"].Square) })] })), jsxRuntime.jsx("div", Object.assign({ className: composeCssClasses.composeCssClasses("hero-slider-menu-nav-button-text", index_module["default"].Text) }, { children: description }))] })) }), index2)
          );
        });
      }
      const CSSVariables = {
        "--nav-color": color,
        "--nav-active-color": activeColor
      };
      return jsxRuntime.jsxs("div", Object.assign({ className: composeCssClasses.composeCssClasses("hero-slider-menu-nav-wrapper", index_module["default"].Wrapper), style: Object.assign(Object.assign(Object.assign({}, position), CSSVariables), { justifyContent }) }, { children: [extraButton && jsxRuntime.jsx("div", Object.assign({ className: composeCssClasses.composeCssClasses("hero-slider-menu-nav-extra", index_module["default"].Extra), style: {
        order: isExtraButtonRight ? 1 : 0
      } }, { children: jsxRuntime.jsx("span", Object.assign({ className: composeCssClasses.composeCssClasses("hero-slider-menu-nav-extra-button", index_module["default"].ExtraButton), style: {
        borderLeft: isExtraButtonRight ? "1px solid var(--nav-color, rgba(215, 225, 235, 0.6))" : void 0,
        borderRight: !isExtraButtonRight ? "1px solid var(--nav-color, rgba(215, 225, 235, 0.6))" : void 0
      } }, { children: extraButton })) })), jsxRuntime.jsxs("ul", Object.assign({ className: composeCssClasses.composeCssClasses("hero-slider-menu-nav-container", index_module["default"].Container) }, { children: [renderButtons(), jsxRuntime.jsx("span", { className: composeCssClasses.composeCssClasses("hero-slider-menu-nav-bar", index_module["default"].Bar), style: {
        width: `${100 / totalSlides}%`,
        transform: `translate3d(${activeSlide - 1}00%, 0, 0)`
      } })] }))] }));
    }
    MenuNav.displayName = "hero-slider/menu-nav";
    exports.MenuNav = MenuNav;
  }
});

// node_modules/hero-slider/dist/components/Overlay/index.module.css.js
var require_index_module_css5 = __commonJS({
  "node_modules/hero-slider/dist/components/Overlay/index.module.css.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var OverlayModuleCss = { "Container": "index-module_Container__uwyVd" };
    exports["default"] = OverlayModuleCss;
  }
});

// node_modules/hero-slider/dist/components/Overlay/index.js
var require_Overlay = __commonJS({
  "node_modules/hero-slider/dist/components/Overlay/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var jsxRuntime = require_jsx_runtime();
    var composeCssClasses = require_composeCssClasses();
    var index_module = require_index_module_css5();
    function Overlay(props) {
      return jsxRuntime.jsx("div", Object.assign({ "data-testid": "hero-slider-overlay", className: composeCssClasses.composeCssClasses("hero-slider-overlay", index_module["default"].Container) }, { children: props.children }));
    }
    Overlay.displayName = "hero-slider/overlay";
    exports.Overlay = Overlay;
  }
});

// node_modules/hero-slider/dist/components/SideNav/index.module.css.js
var require_index_module_css6 = __commonJS({
  "node_modules/hero-slider/dist/components/SideNav/index.module.css.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var SideNavModuleCss = { "Wrapper": "index-module_Wrapper__jT-Cn", "fade-in": "index-module_fade-in__5i5FF", "Button": "index-module_Button__rDMSg", "Active": "index-module_Active__uEbtj", "Line": "index-module_Line__btiyM", "Number": "index-module_Number__YPUv6" };
    exports["default"] = SideNavModuleCss;
  }
});

// node_modules/hero-slider/dist/components/SideNav/index.js
var require_SideNav = __commonJS({
  "node_modules/hero-slider/dist/components/SideNav/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var jsxRuntime = require_jsx_runtime();
    var Controller = require_Controller();
    var Manager = require_Manager();
    var composeCssClasses = require_composeCssClasses();
    var index_module = require_index_module_css6();
    function SideNav({ color, activeColor, left, right, isPositionedRight = true, position = {
      bottom: void 0,
      top: "50%",
      left: !isPositionedRight ? left || "1rem" : void 0,
      right: isPositionedRight ? right || "1rem" : void 0,
      transform: "translateY(-50%)"
    } }) {
      const { state: { slides, totalSlides } } = Manager.useManager();
      const { state: { activeSlide }, changeSlide } = Controller.useController();
      function renderButtons() {
        if (!totalSlides)
          return [];
        const onClickHandler = (slideNumber) => {
          if (slideNumber !== activeSlide)
            changeSlide(slideNumber);
        };
        return Array.from(slides.values()).map(({ number }) => {
          return (
            // TODO: Deal with the disabled linting later:
            // eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions, jsx-a11y/click-events-have-key-events
            jsxRuntime.jsxs("li", Object.assign({ className: composeCssClasses.composeCssClasses("hero-slider-side-nav-button", index_module["default"].Button, {
              className: index_module["default"].Active,
              useIf: activeSlide === number
            }), onClick: () => onClickHandler(number), style: {
              justifyContent: isPositionedRight ? "flex-end" : "flex-start"
            } }, { children: [jsxRuntime.jsx("span", { className: composeCssClasses.composeCssClasses("hero-slider-side-nav-button-line", index_module["default"].Line) }), jsxRuntime.jsx("span", Object.assign({ className: composeCssClasses.composeCssClasses("hero-slider-side-nav-button-number", index_module["default"].Number) }, { children: number.toLocaleString() }))] }), number)
          );
        });
      }
      const CSSVariables = {
        "--nav-color": color,
        "--nav-active-color": activeColor
      };
      return jsxRuntime.jsx("ul", Object.assign({ className: composeCssClasses.composeCssClasses("hero-slider-side-nav-wrapper", index_module["default"].Wrapper), style: Object.assign(Object.assign({}, position), CSSVariables) }, { children: renderButtons() }));
    }
    SideNav.displayName = "hero-slider/nav";
    exports.SideNav = SideNav;
  }
});

// node_modules/hero-slider/dist/node_modules/.pnpm/@rollup_plugin-typescript@8.5.0_rollup@2.79.1_tslib@2.4.0_typescript@4.8.3/node_modules/tslib/tslib.es6.js
var require_tslib_es6 = __commonJS({
  "node_modules/hero-slider/dist/node_modules/.pnpm/@rollup_plugin-typescript@8.5.0_rollup@2.79.1_tslib@2.4.0_typescript@4.8.3/node_modules/tslib/tslib.es6.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    function __rest(s, e) {
      var t = {};
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
          t[p] = s[p];
      if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
            t[p[i]] = s[p[i]];
        }
      return t;
    }
    exports.__rest = __rest;
  }
});

// node_modules/hero-slider/dist/components/Slide/Background/index.module.css.js
var require_index_module_css7 = __commonJS({
  "node_modules/hero-slider/dist/components/Slide/Background/index.module.css.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var BackgroundModuleCss = { "Background": "index-module_Background__hqV3F", "Image": "index-module_Image__-UrHA", "Loading": "index-module_Loading__jqajH", "Loaded": "index-module_Loaded__6nMLk", "FadeIn": "index-module_FadeIn__iDwzu", "fade-in": "index-module_fade-in__M3j53", "ZoomOut": "index-module_ZoomOut__V4Peh", "zoom-out": "index-module_zoom-out__QDhiM" };
    exports["default"] = BackgroundModuleCss;
  }
});

// node_modules/hero-slider/dist/components/Slide/Background/index.js
var require_Background = __commonJS({
  "node_modules/hero-slider/dist/components/Slide/Background/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_es6 = require_tslib_es6();
    var jsxRuntime = require_jsx_runtime();
    var React = require_react();
    var composeCssClasses = require_composeCssClasses();
    var index_module = require_index_module_css7();
    function _interopDefaultLegacy(e) {
      return e && typeof e === "object" && "default" in e ? e : { "default": e };
    }
    var React__default = _interopDefaultLegacy(React);
    exports.BackgroundAnimation = void 0;
    (function(BackgroundAnimation) {
      BackgroundAnimation["FADE"] = "fade";
      BackgroundAnimation["ZOOM"] = "zoom";
    })(exports.BackgroundAnimation || (exports.BackgroundAnimation = {}));
    function Background(props) {
      const {
        backgroundAnimation = exports.BackgroundAnimation.FADE,
        backgroundImageClassName,
        backgroundImageBlendMode,
        backgroundImageSizes,
        backgroundImageSrcSet,
        backgroundImageSrc,
        backgroundImageAlt,
        backgroundImageStyle,
        // eslint-disable-next-line @typescript-eslint/no-unused-vars
        maskBackgroundBlendMode: _,
        // Not used.
        shouldLazyLoad = true,
        onLoad
      } = props, background = tslib_es6.__rest(props, ["backgroundAnimation", "backgroundImageClassName", "backgroundImageBlendMode", "backgroundImageSizes", "backgroundImageSrcSet", "backgroundImageSrc", "backgroundImageAlt", "backgroundImageStyle", "maskBackgroundBlendMode", "shouldLazyLoad", "onLoad"]);
      const [isLoaded, setIsLoaded] = React__default["default"].useState(false);
      const onLoadHandler = (event) => {
        if (onLoad)
          onLoad(event);
        setIsLoaded(true);
      };
      const imageBackgroundClassNames = [];
      if (isLoaded) {
        imageBackgroundClassNames.push(index_module["default"].Loaded);
        switch (backgroundAnimation) {
          case exports.BackgroundAnimation.ZOOM:
            imageBackgroundClassNames.push(index_module["default"].ZoomOut);
            break;
          case exports.BackgroundAnimation.FADE:
            imageBackgroundClassNames.push(index_module["default"].FadeIn);
            break;
        }
      } else {
        imageBackgroundClassNames.push(index_module["default"].Loading);
      }
      return jsxRuntime.jsx("div", Object.assign({ className: composeCssClasses.composeCssClasses("hero-slider-slide-background", backgroundImageClassName, index_module["default"].Background), style: background }, { children: jsxRuntime.jsx("img", { className: composeCssClasses.composeCssClasses("hero-slider-slide-background-image", backgroundImageClassName, index_module["default"].Image, ...imageBackgroundClassNames), sizes: backgroundImageSizes, srcSet: backgroundImageSrcSet, src: backgroundImageSrc, alt: backgroundImageAlt, style: Object.assign({ mixBlendMode: backgroundImageBlendMode }, backgroundImageStyle), onLoad: onLoadHandler, loading: shouldLazyLoad ? "lazy" : "eager" }) }));
    }
    exports["default"] = Background;
  }
});

// node_modules/hero-slider/dist/components/Slide/index.module.css.js
var require_index_module_css8 = __commonJS({
  "node_modules/hero-slider/dist/components/Slide/index.module.css.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var SlideModuleCss = { "Slide": "index-module_Slide__vy4u2", "Container": "index-module_Container__zFpuF", "Wrapper": "index-module_Wrapper__tE11B", "Active": "index-module_Active__5-5Mj" };
    exports["default"] = SlideModuleCss;
  }
});

// node_modules/hero-slider/dist/components/Slide/Mask/index.module.css.js
var require_index_module_css9 = __commonJS({
  "node_modules/hero-slider/dist/components/Slide/Mask/index.module.css.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var MaskModuleCss = { "Mask": "index-module_Mask__i5n4j", "Active": "index-module_Active__1mWg7", "Inner": "index-module_Inner__FmWan", "Sliding": "index-module_Sliding__vU2M1", "Loader": "index-module_Loader__w-3j4", "Loading": "index-module_Loading__53rJo", "Loaded": "index-module_Loaded__vpiHK", "slide-in": "index-module_slide-in__wP0IR" };
    exports["default"] = MaskModuleCss;
  }
});

// node_modules/hero-slider/dist/components/Slide/Mask/index.js
var require_Mask = __commonJS({
  "node_modules/hero-slider/dist/components/Slide/Mask/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var jsxRuntime = require_jsx_runtime();
    var React = require_react();
    var Controller = require_Controller();
    var composeCssClasses = require_composeCssClasses();
    var index_module = require_index_module_css9();
    function _interopDefaultLegacy(e) {
      return e && typeof e === "object" && "default" in e ? e : { "default": e };
    }
    var React__default = _interopDefaultLegacy(React);
    function Mask({ background, isActive }) {
      const { state: { isSliding } } = Controller.useController();
      const [className, setClassName] = React__default["default"].useState(index_module["default"].Loading);
      const onLoadHandler = () => {
        setClassName(index_module["default"].Loaded);
      };
      const style = {
        backgroundColor: background === null || background === void 0 ? void 0 : background.backgroundColor,
        backgroundBlendMode: background === null || background === void 0 ? void 0 : background.maskBackgroundBlendMode,
        backgroundImage: `url('${background === null || background === void 0 ? void 0 : background.backgroundImageSrc}')`
      };
      const isLoaded = className === index_module["default"].Loaded;
      return jsxRuntime.jsxs("div", Object.assign({ className: composeCssClasses.composeCssClasses("hero-slider-slide-mask", index_module["default"].Mask, { className: index_module["default"].Active, useIf: isActive && !isSliding }, { className: index_module["default"].Inactive, useIf: !(isActive && !isSliding) }) }, { children: [jsxRuntime.jsx("img", { alt: (background === null || background === void 0 ? void 0 : background.backgroundImageAlt) || "", className: index_module["default"].Loader, onLoad: onLoadHandler, src: background === null || background === void 0 ? void 0 : background.backgroundImageSrc, loading: (background === null || background === void 0 ? void 0 : background.shouldLazyLoad) ? "lazy" : "eager" }), isLoaded && jsxRuntime.jsx("div", { className: composeCssClasses.composeCssClasses("hero-slider-slide-mask-inner", className, index_module["default"].Inner, { className: index_module["default"].Sliding, useIf: isSliding }), style })] }));
    }
    exports["default"] = Mask;
  }
});

// node_modules/hero-slider/dist/components/Slide/index.js
var require_Slide = __commonJS({
  "node_modules/hero-slider/dist/components/Slide/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var jsxRuntime = require_jsx_runtime();
    var React = require_react();
    var Animations = require_Animations();
    var ConsoleLogger = require_ConsoleLogger();
    var Controller = require_Controller();
    var Manager = require_Manager();
    var composeCssClasses = require_composeCssClasses();
    var index = require_Background();
    var index_module = require_index_module_css8();
    var index$1 = require_Mask();
    function _interopDefaultLegacy(e) {
      return e && typeof e === "object" && "default" in e ? e : { "default": e };
    }
    var React__default = _interopDefaultLegacy(React);
    var logger = ConsoleLogger["default"].new();
    function Slide(props) {
      const { className, shouldRenderMask = false, style, background, onBackgroundLoad, children, label } = props;
      const { getSlide, registerSlide, removeSlide } = Manager.useManager();
      const { state: { activeSlide, isSliding, prevActiveSlide, slidingDirection } } = Controller.useController();
      const { getSlidingAnimationCssClass } = Animations.useAnimations();
      const slideRef = React__default["default"].useRef(null);
      const slide = getSlide(slideRef);
      logger.info("[Slide] rerender", "slide.number: ", slide === null || slide === void 0 ? void 0 : slide.number);
      const [classNames, setClassNames] = React__default["default"].useState(composeCssClasses.composeCssClasses("hero-slider-slide", index_module["default"].Slide, className));
      const isActive = activeSlide === (slide === null || slide === void 0 ? void 0 : slide.number);
      React__default["default"].useEffect(() => {
        if (slide) {
          setClassNames(composeCssClasses.composeCssClasses("hero-slider-slide", index_module["default"].Slide, { className: index_module["default"].Active, useIf: isActive }, { className: index_module["default"].Sliding, useIf: isActive && !isSliding }, {
            className: getSlidingAnimationCssClass(slide.number, prevActiveSlide, slidingDirection),
            useIf: isActive && isSliding
          }));
        }
      }, [isActive, isSliding]);
      React__default["default"].useEffect(() => {
        if (slideRef)
          registerSlide(slideRef, label);
        return () => {
          if (slideRef)
            removeSlide(slideRef);
        };
      }, []);
      if (!slide)
        return null;
      const CSSVariables = {
        "--background-animation-duration": (background === null || background === void 0 ? void 0 : background.backgroundAnimationDuration) ? `${background.backgroundAnimationDuration}ms` : null,
        "--background-animation-delay": (background === null || background === void 0 ? void 0 : background.backgroundAnimationDelay) ? `${background.backgroundAnimationDelay}ms` : null
      };
      const isHidden = isSliding ? slide.number !== activeSlide && slide.number !== prevActiveSlide : slide.number !== activeSlide;
      return jsxRuntime.jsxs("div", Object.assign({ "data-testid": `hero-slider-slide-${slide.number}`, ref: slideRef, hidden: isHidden, className: classNames, style: Object.assign(Object.assign({}, style), CSSVariables) }, { children: [jsxRuntime.jsx(index["default"], Object.assign({}, background, { onLoad: onBackgroundLoad })), jsxRuntime.jsxs("div", Object.assign({ className: composeCssClasses.composeCssClasses("hero-slider-slide-wrapper", index_module["default"].Wrapper) }, { children: [shouldRenderMask ? jsxRuntime.jsx(index$1["default"], { background, isActive }) : null, jsxRuntime.jsx("div", Object.assign({ className: composeCssClasses.composeCssClasses("hero-slider-slide-container", index_module["default"].Container, {
        className: index_module["default"].Active,
        useIf: isActive && !isSliding
      }) }, { children }))] }))] }));
    }
    Slide.displayName = "hero-slider/slide";
    exports.Slide = Slide;
  }
});

// node_modules/hero-slider/dist/index.js
var require_dist = __commonJS({
  "node_modules/hero-slider/dist/index.js"(exports) {
    Object.defineProperty(exports, "__esModule", { value: true });
    var HeroSlider = require_HeroSlider();
    var index = require_AutoplayButton();
    var index$1 = require_ButtonsNav();
    var index$2 = require_MenuNav();
    var index$3 = require_Nav();
    var index$4 = require_Overlay();
    var index$5 = require_SideNav();
    var index$6 = require_Slide();
    exports["default"] = HeroSlider["default"];
    exports.AutoplayButton = index.AutoplayButton;
    exports.ButtonsNav = index$1.ButtonsNav;
    exports.MenuNav = index$2.MenuNav;
    exports.Nav = index$3.Nav;
    exports.Overlay = index$4.Overlay;
    exports.SideNav = index$5.SideNav;
    exports.Slide = index$6.Slide;
  }
});
export default require_dist();
//# sourceMappingURL=hero-slider.js.map
